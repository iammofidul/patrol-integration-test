name: Flutter CI with Android Emulator

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.5'
          channel: 'stable'
          cache: true

      # Step 3: Install Android Command-Line Tools
      - name: Install Android Command-Line Tools
        run: |
          echo "Downloading Android Command-Line Tools"
          mkdir -p "$HOME/android-sdk/cmdline-tools"
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
          unzip -q sdk-tools.zip -d "$HOME/android-sdk/cmdline-tools"
          mv "$HOME/android-sdk/cmdline-tools/cmdline-tools" "$HOME/android-sdk/cmdline-tools/tools"
          rm sdk-tools.zip
        shell: bash

      # Step 4: Set Environment Variables
      - name: Set Environment Variables
        run: |
          echo "Setting ANDROID_HOME and PATH"
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/tools/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
        shell: bash

      # Step 5: Accept Android Licenses
      - name: Accept Android Licenses
        run: |
          echo "Accepting Android Licenses"
          yes | sdkmanager --licenses
        shell: bash
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          PATH: ${{ env.PATH }}

      # Step 6: Install Android SDK and Emulator
      - name: Install Android SDK and Emulator
        run: |
          echo "Installing Android SDK tools"
          sdkmanager --install "platform-tools" "platforms;android-33" "build-tools;33.0.0" --verbose
          echo "Installing Android Emulator"
          sdkmanager --install "emulator" "system-images;android-33;google_apis;x86_64" --verbose
        shell: bash
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          PATH: ${{ env.PATH }}

      # Step 7: Create and Start Emulator
      - name: Create and Start Emulator
        run: |
          echo "Creating AVD"
          echo "no" | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64"
          echo "Starting Emulator"
          nohup emulator -avd test -no-window -no-audio -no-snapshot -gpu swiftshader &
        shell: bash

      # Step 8: Wait for Emulator to Boot
      - name: Wait for Emulator to Boot
        run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
        shell: bash

      # Step 9: Install Patrol CLI
      - name: Install Patrol CLI
        run: dart pub global activate patrol_cli
        shell: bash

      # Step 10: Get Flutter Dependencies
      - name: Get Flutter Dependencies
        run: flutter pub get
        shell: bash

      # Step 11: Run Flutter Unit Tests
      - name: Run Flutter Unit Tests
        run: flutter test
        shell: bash

      # Step 12: Run Patrol Integration Tests
      - name: Run Patrol Tests
        run: |
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          patrol test -t integration_test/app_test.dart --target-platform android
        shell: bash
